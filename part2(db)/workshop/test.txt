using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApp1
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void buttonCreate_Click(object sender, EventArgs e)
        {
            Group group = new Group();
            group.Groupname = "Group2";
            DB db = new DB();
            db.Groups.Add(group);
            db.SaveChanges();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            User user = new User();
            user.Username = "User2";
            user.Password = "Pass2";         
            DB db = new DB();
            db.Users.Add(user);
            db.SaveChanges();
        }

        private void button2_Click(object sender, EventArgs e)
        {
            DB db = new DB();
            User u = db.Users.Where(x => x.Username == "User2").Single();
            Group g = db.Groups.Where(x => x.Groupname == "Group2").Single();
            u.Group.Add(g);
            db.SaveChanges();
        }
    }
}



using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Remoting.Contexts;
using System.Text;
using System.Threading.Tasks;

using System.Data.Entity;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace WindowsFormsApp1
{
    public class DB : DbContext
    {
        public DB() : base(@"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=C:\Users\Student\source\repos\Solution6\WindowsFormsApp1\Database1.mdf;Integrated Security=True;Connect Timeout=30") { }
        public DbSet<User> Users { get; set; }
        public DbSet<Log> Logs { get; set; }
        public DbSet<Group> Groups { get; set; }
    }

    public class User
    {
        [Key]
        public int UserId { get; set; }
        [Index(IsUnique = true), Required]
        [StringLength(200)]
        public string Username { get; set; }
        public string Password { get; set; }
        //
        public virtual List<Group> Group { get; set; }
        //
        public virtual List<Log> Logs { get; set; }

        public override string ToString()
        {
            return Username + " (" + UserId.ToString() + ") (" + ")";
        }
    }

    public class Log
    {
        public int LogId { get; set; }
        public string Info { get; set; }
        public DateTime Created { get; set; }
        //
        public int UserId { get; set; }
        public virtual User User { get; set; }

        public override string ToString()
        {
            return Info + " " + Created.ToString();
        }
    }

    public class Group
    {
        [Key]
        public int GroupId { get; set; }
        [Index(IsUnique = true), Required]
        [StringLength(200)]
        public string Groupname { get; set; }
        //
        public virtual List<User> Users { get; set; }

        public override string ToString()
        {
            return Groupname;
        }
    }
}



